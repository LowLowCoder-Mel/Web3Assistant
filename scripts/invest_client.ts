import axios from 'axios';
import { InvestResponse, InvestParam, ChainId } from '../src/types';
import { formatUnits, parseUnits } from '../src/utils';
import { tokensByChain } from '../src/tokens';
import { logger } from '../src/logging';
import { ethers } from 'ethers';

import dotenv from 'dotenv';
dotenv.config();

const url = `http://${process.env.SERVER_IP}:${process.env.SERVER_PORT}/invest/entrance`;

async function request(query: InvestParam) {
  try {
    const res = await axios.get(url, { params: query });
    const quoteRes = res.data as InvestResponse;
    logger.info(quoteRes);
  } catch (error: any) {
    logger.fatal(`${error.response.data.error}`);
  }
}

async function testEthereumOfInvest() {
  const inputAmount:string = "10000000000000000000000";
  const inputToken:string = "0xD533a949740bb3306d119CC777fa900bA034cd52";
  const outputToken:string = "0x62B9c7356A2Dc64a1969e19C23e4f579F9810Aa7";
  const walletAddress = '0xBE0eB53F46cd790Cd13851d5EFf43D12404d33E8';

  //const calldata = "0xc41a3be8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062b9c7356a2dc64a1969e19c23e4f579f9810aa7000000000000000000000000f89501b77b2fa6329f94f5a05fe84cebb5c8b1a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000";
  const calldata = "0x016cba5f00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000d533a949740bb3306d119cc777fa900ba034cd520000000000000000000000000000000000000000000000056bc75e2d63100000000000000000000000000000482e0689f1f8579409854c20ca2de576903eb839000000000000000000000000000000000000000000000000000000000000000100000000000000000000000062b9c7356a2dc64a1969e19c23e4f579f9810aa7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000482e0689f1f8579409854c20ca2de576903eb839000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e4c41a3be8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062b9c7356a2dc64a1969e19c23e4f579f9810aa7000000000000000000000000be0eb53f46cd790cd13851d5eff43d12404d33e8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
  const investParam: InvestParam = {
    walletAddress,
    calldata,
    inputToken,
    outputToken,
    inputAmount,
    chainId: ChainId.Ethereum,
  };
  console.log(investParam);
  await request(investParam);
}

async function main() {
 await testEthereumOfInvest();
}

main().catch(console.error);
